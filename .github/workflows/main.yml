name: Weather Notify Build

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --dev
    - name: Lint with pycodestyle(pep8)
      run: |
        pipenv run pycodestyle .  --ignore=E501
    - name: Test with pylint
      run: |
        pipenv run pylint -E foreca_notify.py
    - name: Check for PEP 508 requirements and vulnerabilities
      run: |
        pipenv check
    - name: Build Docker image
      run: |
        docker build . --file Dockerfile --tag python-weather-notify:latest 
    - name: Test in Kind k8s cluster
      uses: engineerd/setup-kind@v0.1.0
        with:
        version: "v0.5.0"
      run: |
        kubectl cluster-info
        kubectl get pods -n kube-system
        kind load docker-image python-weather-notify:latest
        kubectl apply -f k8s/cron.yaml
        kubectl get cronjobs
        kubectl create job --from=cronjob/foreca-weather-notification weather-notify-001
        kubectl describe jobs/weather-notify-001
        kubectl describe pods/$(kubectl get pods --selector=job-name=weather-notify-001 --output=jsonpath={.items\[\].metadata.name})
        kubectl wait --for=condition=Ready pods --all --namespace default       
        kubectl logs $(kubectl get pods --selector=job-name=weather-notify-001 --output=jsonpath={.items\[\].metadata.name})